[{"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\index.js":"1","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\App.js":"2","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\reportWebVitals.js":"3","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Layout\\Layout.js":"4","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Navbar.js":"5","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Home.js":"6","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Skills.js":"7","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\About.js":"8","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Education.js":"9","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Proficiency.js":"10","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Projects.js":"11","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Experience.js":"12","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\CustomisedProgress.js":"13","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\GithubRepos.js":"14","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\GithubRepoCard.js":"15","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Portfolio\\portfolio.js":"16","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Navmenu.js":"17","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Footer.js":"18","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Components\\Profile.js":"19","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Components\\NormalFooter.js":"20"},{"size":613,"mtime":1611555308900,"results":"21","hashOfConfig":"22"},{"size":364,"mtime":1611561206049,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611555222799,"results":"24","hashOfConfig":"22"},{"size":1253,"mtime":1611579350963,"results":"25","hashOfConfig":"22"},{"size":2191,"mtime":1611587882877,"results":"26","hashOfConfig":"22"},{"size":1598,"mtime":1611585058330,"results":"27","hashOfConfig":"22"},{"size":3224,"mtime":1611585829037,"results":"28","hashOfConfig":"22"},{"size":3501,"mtime":1611588268901,"results":"29","hashOfConfig":"22"},{"size":3434,"mtime":1611585891900,"results":"30","hashOfConfig":"22"},{"size":2273,"mtime":1611586398436,"results":"31","hashOfConfig":"22"},{"size":3142,"mtime":1611586360120,"results":"32","hashOfConfig":"22"},{"size":4117,"mtime":1611586447710,"results":"33","hashOfConfig":"22"},{"size":939,"mtime":1611586647143,"results":"34","hashOfConfig":"22"},{"size":4215,"mtime":1611586090669,"results":"35","hashOfConfig":"22"},{"size":4963,"mtime":1611586719914,"results":"36","hashOfConfig":"22"},{"size":7407,"mtime":1611588291911,"results":"37","hashOfConfig":"22"},{"size":5629,"mtime":1611587975678,"results":"38","hashOfConfig":"22"},{"size":1836,"mtime":1611586957398,"results":"39","hashOfConfig":"22"},{"size":8714,"mtime":1611588407440,"results":"40","hashOfConfig":"22"},{"size":7989,"mtime":1611583109611,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"3nich7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\index.js",[],["90","91"],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\App.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\reportWebVitals.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Layout\\Layout.js",["92"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\n//Components\r\nimport Navbar from '../Components/Navbar';\r\nimport NavMenu from '../Components/Navmenu';\r\nimport Home from '../Screens/Home/Home';\r\nimport Footer from '../Components/Footer/Footer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paddingBlockTop: {\r\n        height: 100,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 0\r\n        }\r\n    },\r\n    paddingBlock: {\r\n        height: 100,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 200\r\n        }\r\n    }\r\n}));\r\n\r\nfunction Layout() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const mediumScreens = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                mediumScreens ?\r\n                    <Navbar />\r\n                    :\r\n                    <NavMenu />\r\n            }\r\n\r\n            <div className={classes.paddingBlockTop} />\r\n            <Home />\r\n            <div className={classes.paddingBlock} />\r\n            <Footer />\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport default withRouter(Layout);","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Navbar.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Home.js",["93","94"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\n//Components\r\nimport About from './Components/About';\r\nimport Skills from './Components/Skills';\r\nimport Education from './Components/Education';\r\nimport Experience from './Components/Experience';\r\nimport Proficiency from './Components/Proficiency';\r\nimport Projects from './Components/Projects';\r\nimport GithubRepo from './Components/GithubRepos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paddingBlockTop: {\r\n        height: 50,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 0\r\n        }\r\n    },\r\n    paddingBlock: {\r\n        height: 50,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 50\r\n        }\r\n    }\r\n}));\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const mediumScreens = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        <Fragment>\r\n            <About />\r\n            <div className={classes.paddingBlock} />\r\n            <Skills />\r\n            <div className={classes.paddingBlock} />\r\n            <Education />\r\n            <div className={classes.paddingBlock} />\r\n            <Experience />\r\n            <div className={classes.paddingBlock} />\r\n            <Proficiency />\r\n            <div className={classes.paddingBlock} />\r\n            <GithubRepo />\r\n            <div className={classes.paddingBlock} />\r\n            <Projects />\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Skills.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\About.js",["95"],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Education.js",["96"],"import React, { useState } from 'react';\r\nimport { Container, Grid, makeStyles, Paper } from '@material-ui/core';\r\n\r\nimport { customColorTheme, education } from '../../../Portfolio/portfolio';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: '#fff',\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.color,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: 20,\r\n        backgroundColor: '#171717',\r\n        color: '#fff',\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n\r\n    },\r\n    eduLogo: {\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 50,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 80,\r\n            width: 80,\r\n        }\r\n    },\r\n    instituteStyle: {\r\n        color: customColorTheme.color,\r\n        fontSize: 22,\r\n        marginTop: 0,\r\n        marginBottom: 10,\r\n        fontWeight: 'normal'\r\n    },\r\n    infoDegree: {\r\n        color: '#fff',\r\n        fontSize: 16,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    text: {\r\n        color: '#9F9F9F',\r\n        textAlign: 'left',\r\n        fontSize: 12,\r\n\r\n    },\r\n}));\r\n\r\nexport default function Education() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        paper,\r\n        eduLogo,\r\n        instituteStyle,\r\n        infoDegree,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    Education\r\n                <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    education && education.length &&\r\n                    education.map((el, i) => (\r\n                        <Grid item sm={12} md={6}>\r\n                            <Paper elevation={3} className={paper}>\r\n                                <Grid container>\r\n                                    <Grid item xs={4} sm={3}>\r\n                                        <img\r\n                                            src={el.img}\r\n                                            alt={`institute-pic${i}`}\r\n                                            className={eduLogo}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={8} sm={9}>\r\n                                        <h4 className={instituteStyle}>{el.institute}</h4>\r\n                                        <p className={infoDegree}>{el.degree}</p>\r\n                                        <p className={infoDegree}>{el.duration}</p>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <p className={text}>{el.description}</p>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Proficiency.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Projects.js",["97","98","99"],"import React, { useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\n\r\nimport { customColorTheme, projects } from '../../../Portfolio/portfolio';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: '#fff',\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.color,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: '40px 30px',\r\n        backgroundColor: '#171717',\r\n        color: '#fff',\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    image: {\r\n        width: \"75%\",\r\n        height: \"auto\",\r\n        // borderRadius: 15,\r\n    },\r\n    description: {\r\n        backgroundColor: \"#0A0A0A\",\r\n        fontSize: 16,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        paddingTop: 20,\r\n    }\r\n})\r\n);\r\n\r\nconst responsive = {\r\n    0: { items: 1 },\r\n    568: { items: 2 },\r\n    1024: { items: 3 },\r\n}\r\n\r\nexport default function Projects() {\r\n    const classes = useStyles();\r\n    const {\r\n        paper,\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        displayCenter,\r\n        image,\r\n        workTitle,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: 60 }}>\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    PROJECTS\r\n                        <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n\r\n            </Grid>\r\n            <AliceCarousel\r\n                mouseTracking\r\n                items={\r\n                    projects && projects.length &&\r\n                    projects.map((el, i) => (\r\n                        <Paper key={i} elevation={3} className={paper}>\r\n                            <div className={displayCenter}>\r\n                                <img src={el.img} alt={el.workName} className={image} />\r\n                            </div>\r\n                            <div className={displayCenter}>\r\n                                <h4 className={workTitle}>\r\n                                    {el.workName}\r\n                                </h4>\r\n                            </div>\r\n                        </Paper>\r\n                    ))\r\n                }\r\n                responsive={responsive}\r\n                disableButtonsControls\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\Experience.js",["100"],"import React, { useState } from 'react';\r\nimport { Container, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\n\r\nimport { customColorTheme, experience } from '../../../Portfolio/portfolio';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: '#fff',\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.color,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: '40px 30px',\r\n        backgroundColor: '#171717',\r\n        color: '#fff',\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n        minHeight: 430\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    orgImg: {\r\n        height: 100,\r\n        width: 100,\r\n        // borderRadius: 50,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 80,\r\n            width: 80,\r\n        }\r\n    },\r\n    jobTitle: {\r\n        fontSize: 30,\r\n        fontWeight: 'normal'\r\n    },\r\n    occupationTitle: {\r\n        color: customColorTheme.color,\r\n        fontSize: 20,\r\n        margin: \"20px 0\",\r\n    },\r\n    experienceDate: {\r\n        color: '#fff',\r\n        fontSize: 16,\r\n        margin: \"20px 0\"\r\n    },\r\n    text: {\r\n        color: '#9F9F9F',\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n\r\n    },\r\n}));\r\n\r\nexport default function Experience() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        paper,\r\n        orgImg,\r\n        displayCenter,\r\n        jobTitle,\r\n        occupationTitle,\r\n        experienceDate,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    Experience\r\n                <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    experience && experience.length &&\r\n                    experience.map((el, i) => (\r\n                        <Grid item sm={12} md={6}>\r\n                            <Paper elevation={3} className={paper}>\r\n                                <div className={displayCenter}>\r\n                                    <img src={el.img} alt={el.experienceName} className={orgImg} />\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <h4 className={jobTitle}>\r\n                                        {el.experienceName}\r\n                                    </h4>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={occupationTitle}>\r\n                                        {el.experienceOccup}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={experienceDate}>\r\n                                        {el.experienceDate}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={text}>\r\n                                        {el.experienceDetails}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\CustomisedProgress.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Screens\\Home\\Components\\GithubRepos.js",["101"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport { Fade } from \"react-reveal\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport { customColorTheme } from '../../../Portfolio/portfolio';\r\n\r\nimport GithubRepoCard from \"../../../Components/GithubRepoCard\";\r\nimport { openSource, socialMediaLinks } from \"../../../Portfolio/portfolio\";\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: '#fff',\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.color,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    btn: {\r\n        backgroundImage: 'linear-gradient(90deg, rgb(2, 0, 36) 0%, #087059 0%, rgb(119 115 14 / 71%) 100%)',\r\n        color: 'white',\r\n        width: 180,\r\n        padding: 10,\r\n        marginTop: 30,\r\n        textDecoration: 'none',\r\n        textTransform: 'uppercase',\r\n        borderRadius: 4,\r\n        textAlign: 'center',\r\n        fontWeight: 'normal'\r\n    }\r\n}));\r\n\r\nexport default function Projects() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        displayCenter,\r\n        btn\r\n    } = classes;\r\n    const [repo, setrepo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getRepoData();\r\n    }, []);\r\n\r\n    const getRepoData = () => {\r\n        const client = new ApolloClient({\r\n            uri: \"https://api.github.com/graphql\",\r\n            request: (operation) => {\r\n                operation.setContext({\r\n                    headers: {\r\n                        authorization: `Bearer ${openSource.githubConvertedToken}`,\r\n                    },\r\n                });\r\n            },\r\n        });\r\n\r\n        client\r\n            .query({\r\n                query: gql`\r\n        {\r\n        user(login: \"${openSource.githubUserName}\") {\r\n          pinnedItems(first: 6, types: [REPOSITORY]) {\r\n            totalCount\r\n            edges {\r\n              node {\r\n                ... on Repository {\r\n                  name\r\n                  description\r\n                  forkCount\r\n                  stargazers {\r\n                    totalCount\r\n                  }\r\n                  url\r\n                  id\r\n                  diskUsage\r\n                  primaryLanguage {\r\n                    name\r\n                    color\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n        `,\r\n            })\r\n            .then((result) => {\r\n                setrepoFunction(result.data.user.pinnedItems.edges);\r\n                console.log(result);\r\n            });\r\n    }\r\n\r\n    function setrepoFunction(array) {\r\n        setrepo(array);\r\n    }\r\n\r\n    return (\r\n        <Fade bottom duration={1000} distance=\"20px\">\r\n            <Container maxWidth=\"lg\" id=\"opensource\">\r\n                <div className={sectionTitleContainer}>\r\n                    <h1 className={sectionTitle}>\r\n                        Open Source Projects\r\n                            <div className={underline} />\r\n                    </h1>\r\n                </div>\r\n                <Grid container spacing={3}>\r\n                    {repo.map((repo, i) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <GithubRepoCard repo={repo} key={repo.node.id} />\r\n                        </Grid>\r\n                    ))\r\n                    }\r\n                </Grid>\r\n                <div className={displayCenter}>\r\n                    <a\r\n                        href={socialMediaLinks.github}\r\n                        target=\"blank\"\r\n                        className={btn}\r\n                    >\r\n                        More Projects\r\n                    </a>\r\n                </div>\r\n            </Container>\r\n        </Fade>\r\n    );\r\n}\r\n","D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\GithubRepoCard.js",["102","103"],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Portfolio\\portfolio.js",["104"],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Navmenu.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Footer.js",["105","106"],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Components\\Profile.js",[],"D:\\Talha Workplace\\Dev\\Portfolio\\portfolio\\src\\Components\\Footer\\Components\\NormalFooter.js",["107","108","109","110"],"import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Divider, Grid, List, ListItem, ListItemAvatar, ListItemText, Paper, Typography } from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport FB from '../../../Assets/Images/Group 36.png';\r\nimport Linkedin from '../../../Assets/Images/linkedin.png';\r\nimport PhoneIcon from '../../../Assets/Images/Icon material-call.png';\r\nimport Mail from '../../../Assets/Images/Icon zocial-email.png';\r\n\r\nconst styles = theme => ({\r\n    mainDiv: {\r\n        width: \"100%\",\r\n        height: 330,\r\n\r\n    },\r\n    mainName: {\r\n        fontSize: 32,\r\n        color: \"#fff\",\r\n        textDecoration: 'none'\r\n    },\r\n    secondaryText: {\r\n        fontSize: 16,\r\n        color: \"#fff\",\r\n        fontStyle: \"italic\",\r\n    },\r\n    normalText: {\r\n        fontSize: 16,\r\n    },\r\n    socialIcon: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    socialIcon2: {\r\n        width: 16,\r\n        height: 16,\r\n    },\r\n    socialParent: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    creditDiv: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    contentList: {\r\n        marginTop: 0,\r\n        paddingTop: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: -30,\r\n        },\r\n    },\r\n    centerDesktop: {\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            justifyContent: \"center\",\r\n        },\r\n    }\r\n});\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {\r\n            mainDiv,\r\n            mainName,\r\n            secondaryText,\r\n            normalText,\r\n            socialIcon,\r\n            socialIcon2,\r\n            socialParent,\r\n            creditDiv,\r\n            contentList,\r\n            centerDesktop,\r\n        } = classes;\r\n\r\n        return (\r\n            <>\r\n                <div className={mainDiv}>\r\n                    <Container maxWidth=\"lg\" style={{ padding: 30 }}>\r\n                        <Grid container>\r\n                            <Grid item md={4} xs={12}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                        <Link className={mainName} to='/'>\r\n                                            <Typography variant=\"h6\" id=\"my-logo\" className=\"developer-name\">\r\n                                                &lt;\r\n                                                Talha Khalid\r\n                                                /&gt;\r\n                                            </Typography>\r\n                                        </Link>\r\n                                        <Typography className={secondaryText}>\r\n                                            Software Engineer\r\n                                            <br />\r\n                                            MERN Stack Developer\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ marginTop: 90, marginBottom: 20 }}>\r\n                                        <Typography className={normalText}>\r\n                                            Follow Me\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <img src={FB} alt=\"fb\" className={socialIcon} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} className={centerDesktop}>\r\n                                <List className={contentList}>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Home\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Skills\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Education\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Experience\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Proficiency\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Projects\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} className={centerDesktop}>\r\n                                <List className={contentList}>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Contact Me\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={PhoneIcon} alt=\"phone\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            03362502067\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={PhoneIcon} alt=\"phone\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            03040438807\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={Mail} alt=\"mail\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            hafiz.talhakh@gmail.com\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                    <Divider style={{ background: \"#087059\" }} />\r\n                    <div className={creditDiv}>\r\n                        <Typography className={normalText} style={{ padding: 20, color: \"#087059\" }}>\r\n                            All Rights Reserved By Talha Khalid\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"119","line":32,"column":11,"nodeType":"117","messageId":"118","endLine":32,"endColumn":24},{"ruleId":"115","severity":1,"message":"120","line":69,"column":9,"nodeType":"117","messageId":"118","endLine":69,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"122","line":3,"column":34,"nodeType":"117","messageId":"118","endLine":3,"endColumn":44},{"ruleId":"115","severity":1,"message":"123","line":78,"column":9,"nodeType":"117","messageId":"118","endLine":78,"endColumn":13},{"ruleId":"115","severity":1,"message":"124","line":81,"column":18,"nodeType":"117","messageId":"118","endLine":81,"endColumn":25},{"ruleId":"115","severity":1,"message":"121","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":62,"column":8,"nodeType":"127","endLine":62,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":111,"column":153,"nodeType":"131","endLine":111,"endColumn":176},{"ruleId":"129","severity":1,"message":"130","line":120,"column":153,"nodeType":"131","endLine":120,"endColumn":176},{"ruleId":"115","severity":1,"message":"132","line":13,"column":8,"nodeType":"117","messageId":"118","endLine":13,"endColumn":14},{"ruleId":"115","severity":1,"message":"133","line":35,"column":15,"nodeType":"117","messageId":"118","endLine":35,"endColumn":21},{"ruleId":"125","severity":1,"message":"134","line":42,"column":8,"nodeType":"127","endLine":42,"endColumn":10,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":3,"column":82,"nodeType":"117","messageId":"118","endLine":3,"endColumn":87},{"ruleId":"115","severity":1,"message":"137","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"138","line":75,"column":13,"nodeType":"117","messageId":"118","endLine":75,"endColumn":24},{"ruleId":"115","severity":1,"message":"139","line":76,"column":13,"nodeType":"117","messageId":"118","endLine":76,"endColumn":25},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'mediumScreens' is assigned a value but never used.","'title' is assigned a value but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'text' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRepoData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'KULogo' is defined but never used.","'client' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfileData'. Either include it or remove the dependency array.",["143"],"'Paper' is defined but never used.","'Linkedin' is defined but never used.","'socialIcon2' is assigned a value but never used.","'socialParent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getRepoData]",{"range":"148","text":"149"},"Update the dependencies array to be: [getProfileData]",{"range":"150","text":"151"},[1716,1718],"[getRepoData]",[1153,1155],"[getProfileData]"]